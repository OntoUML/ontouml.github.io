(self.webpackChunkontouml_docs=self.webpackChunkontouml_docs||[]).push([[962],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return n?o.createElement(f,l(l({ref:t},u),{},{components:n})):o.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3926:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),l=["components"],i={sidebar_position:1,hide_table_of_contents:!0},c="Projects",s={unversionedId:"ontouml-js/modeling/projects",id:"ontouml-js/modeling/projects",isDocsHomePage:!1,title:"Projects",description:"Every OntoUML element can be created from a constructor that can receive a partial object as references for its creation",source:"@site/docs/ontouml-js/modeling/projects.md",sourceDirName:"ontouml-js/modeling",slug:"/ontouml-js/modeling/projects",permalink:"/docs/ontouml-js/modeling/projects",editUrl:"https://github.com/OntoUML/ontouml.github.io/edit/main/docs/ontouml-js/modeling/projects.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/ontouml-js/installation"},next:{title:"serialization",permalink:"/docs/ontouml-js/modeling/serialization"}},u=[],p={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"projects"},"Projects"),(0,a.kt)("p",null,"Every OntoUML element can be created from a constructor that can receive a partial object as references for its creation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Project } from 'ontouml-js';\n\n// creates an OntoUML projects\nconst project = new Project({ name: 'My Project' });\n")),(0,a.kt)("p",null,"Projects contain an instance of Package dubbed model that contains all model elements in the project Container elements, e.g., projects and packages, also serve as factories for their contents"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// creates a \"model\" Package\nconst model = project.createModel({ name: 'Model a.k.a. Root Package' }); \n")),(0,a.kt)("p",null,'Instead of partial objects, "factory" methods receive more suitable lists of arguments to facilitating populating elements'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const person = model.createKind('Person');\nconst school = model.createKind('School');\nconst date = model.createDatatype('Date');\nconst enrollment = model.createRelator('Enrollment');\nconst studiesAt = model.createMaterialRelation(person, school, 'studies at');\n\nmodel.createMediationRelation(enrollment, person);\nmodel.createMediationRelation(enrollment, school);\n")),(0,a.kt)("p",null,"Containers also include methods to easily support retrieving their contents"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// returns all contained attributes\nmodel.getAllAttributes(); \n// returns all contained classes\nmodel.getAllClasses(); \n// returns all contained generalizations\nmodel.getAllGeneralizations(); \n")),(0,a.kt)("p",null,"Any element can be easily serialized into JSON, and properly serialized elements can be deserialized just as easily"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { serializationUtils } from 'ontouml-js';\n\nconst projectSerialization = JSON.stringify(project);\nconst projectCopy = serializationUtils.parse(projectSerialization);\n")))}m.isMDXComponent=!0}}]);